"""initial migration

Revision ID: b7977ed8cc3d
Revises: 
Create Date: 2022-04-21 16:03:03.885020

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b7977ed8cc3d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('helped_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_type', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('got_appointment_at', sa.DateTime(), nullable=True),
    sa.Column('appointment_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_helped_users_appointment_date'), 'helped_users', ['appointment_date'], unique=False)
    op.create_index(op.f('ix_helped_users_got_appointment_at'), 'helped_users', ['got_appointment_at'], unique=False)
    op.create_index(op.f('ix_helped_users_id_type'), 'helped_users', ['id_type'], unique=False)
    op.create_index(op.f('ix_helped_users_location'), 'helped_users', ['location'], unique=False)
    op.create_index(op.f('ix_helped_users_registered_at'), 'helped_users', ['registered_at'], unique=False)
    op.create_table('problem_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('date_of_birth', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('id_type', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_problem_users_date_of_birth'), 'problem_users', ['date_of_birth'], unique=False)
    op.create_index(op.f('ix_problem_users_email'), 'problem_users', ['email'], unique=True)
    op.create_index(op.f('ix_problem_users_first_name'), 'problem_users', ['first_name'], unique=False)
    op.create_index(op.f('ix_problem_users_id_type'), 'problem_users', ['id_type'], unique=False)
    op.create_index(op.f('ix_problem_users_last_name'), 'problem_users', ['last_name'], unique=False)
    op.create_index(op.f('ix_problem_users_location'), 'problem_users', ['location'], unique=False)
    op.create_index(op.f('ix_problem_users_phone'), 'problem_users', ['phone'], unique=False)
    op.create_index(op.f('ix_problem_users_registered_at'), 'problem_users', ['registered_at'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('permissions', sa.UnicodeText(), nullable=True),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('fs_uniquifier', sa.String(length=64), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('current_login_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_ip', sa.String(length=64), nullable=True),
    sa.Column('current_login_ip', sa.String(length=64), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=True),
    sa.Column('tf_primary_method', sa.String(length=64), nullable=True),
    sa.Column('tf_totp_secret', sa.String(length=255), nullable=True),
    sa.Column('tf_phone_number', sa.String(length=128), nullable=True),
    sa.Column('create_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('update_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('us_totp_secrets', sa.Text(), nullable=True),
    sa.Column('us_phone_number', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('fs_uniquifier'),
    sa.UniqueConstraint('username')
    )
    op.create_table('utrecht',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('date_of_birth', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('id_type', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_utrecht_date_of_birth'), 'utrecht', ['date_of_birth'], unique=False)
    op.create_index(op.f('ix_utrecht_email'), 'utrecht', ['email'], unique=True)
    op.create_index(op.f('ix_utrecht_first_name'), 'utrecht', ['first_name'], unique=False)
    op.create_index(op.f('ix_utrecht_id_type'), 'utrecht', ['id_type'], unique=False)
    op.create_index(op.f('ix_utrecht_last_name'), 'utrecht', ['last_name'], unique=False)
    op.create_index(op.f('ix_utrecht_location'), 'utrecht', ['location'], unique=False)
    op.create_index(op.f('ix_utrecht_phone'), 'utrecht', ['phone'], unique=False)
    op.create_index(op.f('ix_utrecht_registered_at'), 'utrecht', ['registered_at'], unique=False)
    op.create_table('vleuten',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('date_of_birth', sa.String(length=64), nullable=True),
    sa.Column('phone', sa.String(length=10), nullable=True),
    sa.Column('id_type', sa.String(length=64), nullable=True),
    sa.Column('location', sa.String(length=64), nullable=True),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vleuten_date_of_birth'), 'vleuten', ['date_of_birth'], unique=False)
    op.create_index(op.f('ix_vleuten_email'), 'vleuten', ['email'], unique=True)
    op.create_index(op.f('ix_vleuten_first_name'), 'vleuten', ['first_name'], unique=False)
    op.create_index(op.f('ix_vleuten_id_type'), 'vleuten', ['id_type'], unique=False)
    op.create_index(op.f('ix_vleuten_last_name'), 'vleuten', ['last_name'], unique=False)
    op.create_index(op.f('ix_vleuten_location'), 'vleuten', ['location'], unique=False)
    op.create_index(op.f('ix_vleuten_phone'), 'vleuten', ['phone'], unique=False)
    op.create_index(op.f('ix_vleuten_registered_at'), 'vleuten', ['registered_at'], unique=False)
    op.create_table('roles_users',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_index(op.f('ix_vleuten_registered_at'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_phone'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_location'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_last_name'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_id_type'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_first_name'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_email'), table_name='vleuten')
    op.drop_index(op.f('ix_vleuten_date_of_birth'), table_name='vleuten')
    op.drop_table('vleuten')
    op.drop_index(op.f('ix_utrecht_registered_at'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_phone'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_location'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_last_name'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_id_type'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_first_name'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_email'), table_name='utrecht')
    op.drop_index(op.f('ix_utrecht_date_of_birth'), table_name='utrecht')
    op.drop_table('utrecht')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_index(op.f('ix_problem_users_registered_at'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_phone'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_location'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_last_name'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_id_type'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_first_name'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_email'), table_name='problem_users')
    op.drop_index(op.f('ix_problem_users_date_of_birth'), table_name='problem_users')
    op.drop_table('problem_users')
    op.drop_index(op.f('ix_helped_users_registered_at'), table_name='helped_users')
    op.drop_index(op.f('ix_helped_users_location'), table_name='helped_users')
    op.drop_index(op.f('ix_helped_users_id_type'), table_name='helped_users')
    op.drop_index(op.f('ix_helped_users_got_appointment_at'), table_name='helped_users')
    op.drop_index(op.f('ix_helped_users_appointment_date'), table_name='helped_users')
    op.drop_table('helped_users')
    # ### end Alembic commands ###
